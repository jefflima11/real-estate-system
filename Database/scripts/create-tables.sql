CREATE DATABASE RES;

USE RES;

CREATE TABLE BANCO(
	CD_BANCO INT PRIMARY KEY,
	NM_BANCO VARCHAR(255)
);

CREATE SEQUENCE SEQ_BANCO
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;

CREATE TABLE DADO_BANCARIOS(
	CD_DADOS_BANCARIOS INT PRIMARY KEY,
	CD_CLIENTE INT NOT NULL,
	CD_BANCO INT,
	AGENCIA VARCHAR(50),
	CONTA VARCHAR(50),
	PIX VARCHAR(50),
	CONSTRAINT FK_BANCO_DADOS_BANCARIOS FOREIGN KEY (CD_BANCO) 
		REFERENCES BANCO(CD_BANCO)
);

CREATE SEQUENCE SEQ_DADO_BANCARIOS
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;

CREATE TABLE PAIS(
	CD_PAIS INT PRIMARY KEY,
	NM_PAIS NVARCHAR NOT NULL
);

CREATE SEQUENCE SEQ_PAIS
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;

CREATE TABLE ESTADO(
	CD_ESTADO INT PRIMARY KEY,
	NM_ESTADO NVARCHAR NOT NULL,
	CD_PAIS INT NOT NULL,
	CONSTRAINT FK_ESTADO_PAIS FOREIGN KEY(CD_PAIS) 
		REFERENCES PAIS(CD_PAIS)
);

CREATE SEQUENCE SEQ_ESTADO
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;

CREATE TABLE CIDADE(
	CD_CIDADE INT PRIMARY KEY,
	NM_CIDADE NVARCHAR NOT NULL,
);

CREATE SEQUENCE SEQ_CIDADE
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;


CREATE TABLE BAIRRO(
	CD_BAIRRO INT PRIMARY KEY,
	NM_BAIRRO NVARCHAR NOT NULL
);

CREATE SEQUENCE SEQ_BAIRRO
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;

CREATE TABLE RUA(
	CD_RUA INT PRIMARY KEY,
	NM_RUA NVARCHAR(255) NOT NULL,
	NR_CEP VARCHAR(50)
);

CREATE SEQUENCE SEQ_RUA
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9999999
	CACHE 10;

CREATE PROCEDURE SP_INSERT_RUA
	@NM_RUA NVARCHAR(255),
	@NR_CEP VARCHAR(50)
AS
BEGIN
	IF EXISTS (
		SELECT 1
		FROM DBO.RUA
		WHERE NM_RUA = @NM_RUA
		OR NR_CEP = @NR_CEP
	) 
	BEGIN 
		RAISERROR('Já existe um registro com o mesmo nome de rua ou cep.',16,1);
	END
	ELSE
	BEGIN
		INSERT INTO DBO.RUA (CD_RUA, NM_RUA, NR_CEP)
		VALUES (NEXT VALUE FOR SEQ_RUA, @NM_RUA, @NR_CEP);
	END
END;


CREATE TABLE VAL_CONT(
	CD_VALOR_CONTRATO INT PRIMARY KEY,
	CD_CONTRATO INT NOT NULL,
	VL_CONTRATO INT NOT NULL,
	DS_VALOR NVARCHAR NOT NULL,
	DT_INICIO_VIGENCIA_VALOR DATE NOT NULL,
	DT_FIM_VIGENCIA_VALOR DATE NOT NULL
);

CREATE TABLE CON_PAG(
	CD_CON_PAG INT PRIMARY KEY,
	DS_CON_PAG VARCHAR(255) NOT NULL,
	CD_CONTRATO INT NOT NULL,
	VL_PAGAR MONEY NOT NULL,
	DT_PAGAMENTO DATETIME NOT NULL,
	CD_AGENTE INT NOT NULL,
	DT_REGISTRO DATETIME NOT NULL
);

CREATE TABLE CON_REC(
	CD_CON_REC INT PRIMARY KEY,
	DS_CON_REC VARCHAR(255) NOT NULL,
	CD_CONTRATO INT NOT NULL,
	VL_RECEBER MONEY NOT NULL,
	DT_RECEBIMENTO DATETIME NOT NULL,
	CD_AGENTE INT NOT NULL,
	DT_REGISTRO DATE
);

CREATE TABLE CONTRATOS(
	CD_CONTRATO INT PRIMARY KEY,
	DS_CONTRATO VARCHAR(255) NOT NULL,
	TP_CONTRATO VARCHAR(1) NOT NULL,
	CD_CONTRATANTE INT NOT NULL,
	CD_LOCATARIO INT NOT NULL,
	CD_AGENTE INT NOT NULL,
	DT_REGISTRO_CONTRATO DATETIME NOT NULL,
	DT_INICIO_CONTRATO DATE NOT NULL,
	DT_FIM_CONTRATO DATE NOT NULL,
	DT_VENCIMENTO_CONTRATO DATE NOT NULL
	CONSTRAINT FK_CONTRATOS_VALOR_CONTRATOS FOREIGN KEY(CD_CONTRATO)
		REFERENCES VAL_CONT (CD_VALOR_CONTRATO)
);

ALTER TABLE CON_PAG
ADD CONSTRAINT FK_CON_PAG_CONT FOREIGN KEY (CD_CONTRATO)
REFERENCES CONTRATOS (CD_CONTRATO);

ALTER TABLE CON_REC
ADD CONSTRAINT FK_CON_REC_CONT FOREIGN KEY (CD_CONTRATO)
REFERENCES CONTRATOS (CD_CONTRATO);

CREATE FUNCTION DBO.REMOVER_ACENTOS (@TEXTO NVARCHAR(MAX))
RETURNS NVARCHAR(MAX)
AS
BEGIN
    DECLARE @RESULTADO NVARCHAR(MAX)

    -- SUBSTITUIR CARACTERES ACENTUADOS POR NÃO ACENTUADOS
    SET @RESULTADO = REPLACE(@TEXTO, 'á', 'a')
    SET @RESULTADO = REPLACE(@RESULTADO, 'à', 'a')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ã', 'a')
    SET @RESULTADO = REPLACE(@RESULTADO, 'â', 'a')
    SET @RESULTADO = REPLACE(@RESULTADO, 'é', 'e')
    SET @RESULTADO = REPLACE(@RESULTADO, 'è', 'e')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ê', 'e')
    SET @RESULTADO = REPLACE(@RESULTADO, 'í', 'i')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ì', 'i')
    SET @RESULTADO = REPLACE(@RESULTADO, 'î', 'i')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ó', 'o')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ò', 'o')
    SET @RESULTADO = REPLACE(@RESULTADO, 'õ', 'o')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ô', 'o')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ú', 'u')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ù', 'u')
    SET @RESULTADO = REPLACE(@RESULTADO, 'û', 'u')
    SET @RESULTADO = REPLACE(@RESULTADO, 'ç', 'c')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Á', 'A')
    SET @RESULTADO = REPLACE(@RESULTADO, 'À', 'A')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ã', 'A')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Â', 'A')
    SET @RESULTADO = REPLACE(@RESULTADO, 'É', 'E')
    SET @RESULTADO = REPLACE(@RESULTADO, 'È', 'E')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ê', 'E')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Í', 'I')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ì', 'I')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Î', 'I')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ó', 'O')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ò', 'O')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Õ', 'O')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ô', 'O')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ú', 'U')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ù', 'U')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Û', 'U')
    SET @RESULTADO = REPLACE(@RESULTADO, 'Ç', 'C')

    RETURN @RESULTADO
END;

CREATE TRIGGER FORMATAR_STRINGS
ON DBO.RUA
AFTER INSERT
AS
BEGIN
    -- Atualiza a coluna NM_RUA usando a função FORMATAR_STRINGS após a inserção
    UPDATE r
    SET r.NM_RUA = dbo.FORMATAR_STRINGS(i.NM_RUA)
    FROM DBO.RUA r
    INNER JOIN INSERTED i ON r.CD_RUA = i.CD_RUA;
END;

CREATE FUNCTION dbo.FORMATAR_STRINGS (@input NVARCHAR(255))
RETURNS NVARCHAR(255)
AS
BEGIN
    -- Exemplo de formatação: remove espaços em branco
    RETURN LTRIM(RTRIM(@input));
END;


CREATE FUNCTION dbo.FN_FORMATAR_STRINGS (@input NVARCHAR(255))
RETURNS NVARCHAR(255)
AS
BEGIN
    -- Exemplo de formatação: remove espaços em branco
    RETURN LTRIM(RTRIM(@input));
END;

CREATE TRIGGER FORMATAR_STRINGS
ON DBO.RUA
AFTER INSERT
AS
BEGIN
    -- Atualiza a coluna NM_RUA usando a função FORMATAR_STRINGS após a inserção
    UPDATE r
    SET r.NM_RUA = dbo.FORMATAR_STRINGS(i.NM_RUA)
    FROM DBO.RUA r
    INNER JOIN INSERTED i ON r.CD_RUA = i.CD_RUA;
END;


DROP FUNCTION FORMATAR_STRINGS;

exec SP_INSERT_RUA 'testetwo','';
